{"version":3,"sources":["reducers/work-rate.js","components/work-rate-list/work-rate-list.js","App.js","reportWebVitals.js","index.js"],"names":["initailState","workRates","workRateReducer","state","action","type","Object","assign","donate","message","WorkRateList","useState","setWorkRates","useEffect","fetch","then","res","json","data","ListGroup","as","numbered","console","log","length","map","workRate","index","Item","className","work_name","rate","Badge","variant","pill","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAMA,EAAe,CACnBC,UAAW,IAiBEC,EAdS,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACxD,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOC,OAAOC,OAAO,GAAIJ,EAAO,CAC9BK,OAAQL,EAAMF,YAElB,IAAK,iBACH,OAAOK,OAAOC,OAAO,GAAIJ,EAAO,CAC9BM,QAASL,EAAOK,UAEpB,QAAS,OAAON,I,4CCVL,SAASO,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOV,EAAP,KAAkBW,EAAlB,KAEAC,qBAAU,WACRC,MAAM,yEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAaM,QAC5B,IAqBH,OACE,cAACC,EAAA,EAAD,CAAWC,GAAG,KAAKC,UAAQ,EAA3B,UAnBAC,QAAQC,IAAI,aAActB,GACD,IAArBA,EAAUuB,OACJ,0CAGHvB,EAAUwB,KAAI,SAACC,EAAUC,GAC9B,OAAQ,cAACR,EAAA,EAAUS,KAAX,CAA4BR,GAAG,KAAKS,UAAU,mDAA9C,SACN,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BH,EAASI,YAClCJ,EAASK,KACV,cAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,MAAI,EAA7B,oBAJyBP,S,MCLpBQ,MAXf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,8CACA,cAACnB,EAAD,GAAkB,mBCGX0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGRO,EAAQC,YAAY3C,GAE1B4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.1e949673.chunk.js","sourcesContent":["const initailState = {\n  workRates: [],\n};\n\nconst workRateReducer = (state = initailState, action) => {\n  switch (action.type) {\n    case 'UPDATE_WORKRATE':\n      return Object.assign({}, state, {\n        donate: state.workRates,\n      });\n    case 'UPDATE_MESSAGE':\n      return Object.assign({}, state, {\n        message: action.message,\n      });\n    default: return state;\n  }\n}\n\nexport default workRateReducer;","import React, { useState, useEffect } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\n\nexport default function WorkRateList () {\n  const [workRates, setWorkRates] = useState([]);\n\n  useEffect(() => {\n    fetch('https://my-json-server.typicode.com/habilit/income-payment/work-rates')\n      .then(res => res.json())\n      .then(data => setWorkRates(data))\n  }, [])\n\n  const renderWorkRateList = () => {\n    console.log('workRates ', workRates);\n    if (workRates.length === 0) {\n      return (<div>No Data</div>)\n    }\n\n    return workRates.map((workRate, index) => {\n      return (<ListGroup.Item key={index} as=\"li\" className=\"d-flex justify-content-between align-items-start\">\n        <div className=\"ms-2 me-auto\">\n          <div className=\"fw-bold\">{workRate.work_name}</div>\n          {workRate.rate}\n          <Badge variant=\"primary\" pill>14</Badge>\n        </div>\n      </ListGroup.Item>);\n    })\n\n  }\n\n\n  return (\n    <ListGroup as=\"ol\" numbered>\n      {renderWorkRateList()}\n    </ListGroup>)\n}","import React  from 'react';\nimport WorkRateList from './components/work-rate-list/work-rate-list';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>This is Tina</h1>\n        <WorkRateList key=\"work-rate\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore  } from 'redux';\nimport { Provider } from 'react-redux';\nimport workRateReducer from './reducers/work-rate';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(workRateReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}